@using CaptainCoder.TacticsEngine.Board
@using System.Diagnostics.CodeAnalysis;
@inject ToolManager ToolManager;
<div class="board-container" style="--cell-size: @(CellSize)px;
           --board-width: @Width;
           --board-height: @Height;" @onmouseup="@(() => ToolManager.MouseUp(Board, _mousePosition))">
    <CascadingValue Value="@Board">
        <CascadingValue Value="@this">
            @foreach (Position position in Positions)
            {
                <TileRenderer @key="@position" Position="@position" OnMouseEnter="@(() => MouseEnter(@position))" />
            }
            @foreach (Positioned<Figure> figure in Board.Figures)
            {
                <PositionedFigureRenderer Figure="@figure"/>
            }
            @if (FigureTool.Shared.DraggedFigure is Positioned<Figure> target)
            {
                <PositionedFigureRenderer Figure="@target" IsDragging />
            }
        </CascadingValue>
    </CascadingValue>
</div>

@code
{
    public int CellSize { get; set; } = 25;
    public int Width { get; set; } = 20;
    public int Height { get; set; } = 20;
    [Parameter, EditorRequired, AllowNull]
    public Board Board { get; set; }
    private Position _mousePosition = new(0, 0);
    public IEnumerable<Position> Positions
    {
        get
        {
            for (int y = 0; y < Height; y++)
            {
                for (int x = 0; x < Width; x++)
                {
                    yield return new Position(x, y);
                }
            }
        }
    }

    private void MouseEnter(Position position)
    {
        _mousePosition = position;
        ToolManager.MouseOver(Board, position);
        StateHasChanged();
    }
}
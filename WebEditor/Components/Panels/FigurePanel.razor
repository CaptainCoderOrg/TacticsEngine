@using System.Diagnostics.CodeAnalysis;
@using CaptainCoder.TacticsEngine.Board
@using CaptainCoder.TacticsEngine.Board
@using WebEditor.Components.Board
@using WebEditor.Components.DragAndDrop
<div class="figure-panel">
    <h2>Figures</h2>
    <div class="figure-selection">
        
        @foreach (Figure figure in _figures)
        {
            
            <Draggable CreateDragData="@(args => CreateData(args, figure))">
                <FigureRenderer Figure="@figure"/>
            </Draggable>
        }
</div>

<div class="figure-creator">
    <h2>Enter sizes to create a new figure</h2>
    <p>Width:</p>
    <input type="text" placeholder="Width" @bind="@NewWidth" />
    <p>Height:</p>
    <input type="text" placeholder="Width" @bind="@NewHeight" />
    <button @onclick="@(AddNewFigure)">Add!</button>
</div>
@code
{

    static bool PopupVisible { get; set; } = false;
    static string NewHeight { get; set; } = "";
    static string NewWidth { get; set; } = "";


    [CascadingParameter, EditorRequired] public required BoardData CurrentBoard { get; set; }

    private List<Figure> _figures =
    [
        new Figure(1, 1),
        new Figure(2, 2),
        new Figure(1, 2),
        new Figure(2, 1),
        new Figure(3, 2),
        new Figure(3, 3),
    ];


    private IDragData CreateData(DragEventArgs args, Figure figure)
    {
        int offX = (int)(-args.OffsetX / 25);
        int offY = (int)(-args.OffsetY / 25);
        return new FigureDragData(figure, new Position(offX, offY));
    }
    [CascadingParameter] public IModalService Modal { get; set; } = default!;
    

private int _NewWidth;
    private int _NewHeight;
    private ModalParameters parameters = new ModalParameters()
        .Add(nameof(IComponent), "Only Positive integers may be inputed");
    
    private void AddNewFigure()
    {
        try
        {
            _NewWidth = int.Parse(NewWidth);
            _NewHeight = int.Parse(NewHeight);
        }
        catch
        {
            Modal.Show<IComponent>(title: "Unable to create Figure", parameters: parameters);
        }

        if (_NewWidth == 0 || _NewHeight == 0)
        {
            Modal.Show<IComponent>(title: "Unable to create Figure", parameters: parameters);
        }

        _figures.Add(new Figure(_NewWidth, _NewHeight));
    }
}

</div>

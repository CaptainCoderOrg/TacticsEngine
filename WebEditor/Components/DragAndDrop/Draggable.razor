@inject DragAndDropManager DragAndDropManager
<div class="draggable-element"
     draggable="true"
     @ondragstart="@CheckDragStart"
     @ondragend="@CheckDragEnd">
    @ChildContent
</div>

@code
{
    [Parameter, EditorRequired]
    public required RenderFragment ChildContent { get; set; }

    [Parameter, EditorRequired]
    public required Func<DragEventArgs, IDragData> CreateDragData { get; set; }

    private async void CheckDragStart(DragEventArgs args)
    {
        // We need to wait for the JS event to finish firing before we trigger our own
        await Task.Delay(1);
        DragAndDropManager.DraggedData = CreateDragData.Invoke(args);
        DragAndDropManager.DraggedData?.HandleDragStart();
    }

    private async void CheckDragEnd(DragEventArgs args)
    {
        // We need to wait for the JS event to finish firing before we trigger our own
        await Task.Delay(1);
        DragAndDropManager.DraggedData?.HandleDragEnd();
        DragAndDropManager.DraggedData = null;
    }
}
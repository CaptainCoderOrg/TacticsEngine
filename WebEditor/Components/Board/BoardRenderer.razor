<div class="board-container"
     show-grid="@ShowGrid"
     style="@CellSizeStyle @WidthStyle @HeightStyle">
    <CascadingValue Value="@Board">
        <CascadingValue Value="@this">

            @foreach (Position position in Board.Tiles)
            {
                <TileRenderer Position="@position" />
            }
            <TileEditorOverlay />
            @foreach (Positioned<Figure> figure in Board.Figures)
            {
                <PositionedFigureRenderer Figure="@figure" />
            }

            <BoardDragGrid />
        </CascadingValue>
    </CascadingValue>
</div>

@code
{
    [Parameter]
    public bool ShowGrid { get; set; } = true;
    [Parameter]
    public double Zoom { get; set; } = 1;
    [Parameter]
    public int Width { get; set; } = 20;
    [Parameter]
    public int Height { get; set; } = 20;
    [Parameter, EditorRequired]
    public required BoardData Board { get; set; }
    public int CellSize => (int)(25 * Zoom);

    private string? ShowGridClass => ShowGrid ? "show-grid" : null;
    private string WidthStyle => $"--board-width: {Width};";
    private string HeightStyle => $"--board-height: {Height};";
    private string CellSizeStyle => $"--cell-size: {CellSize}px;";

    public IEnumerable<Position> Positions
    {
        get
        {
            for (int y = 0; y < Height; y++)
            {
                for (int x = 0; x < Width; x++)
                {
                    yield return new Position(x, y);
                }
            }
        }
    }

    public void Redraw() => StateHasChanged();
}
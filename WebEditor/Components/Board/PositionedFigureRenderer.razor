@using System.Diagnostics.CodeAnalysis
@implements IDisposable
@inject ToolManager ToolManager

@if (Parent.Board.Figures.Contains(Figure))
{
<ElementRenderer Position="@Figure.Position" IsSelected="@IsSelected">
    <FigureRenderer Figure="@Figure.Element" />
</ElementRenderer>
}

@code
{
    [Parameter, EditorRequired, AllowNull]
    public Positioned<Figure> Figure { get; set; }

    [CascadingParameter, AllowNull]
    public required BoardRenderer Parent { get; set; }
    public bool IsSelected => FigureTool.Shared.Selected == Figure;

    protected override void OnInitialized()
    {
        FigureTool.Shared.OnChange += CheckSelected;
    }

    public void Dispose()
    {
        FigureTool.Shared.OnChange -= CheckSelected;
    }
    private void CheckSelected(Positioned<Figure>? previous, Positioned<Figure>? selected)
    {
        if (previous == Figure || selected == Figure) { StateHasChanged(); }
    }

}
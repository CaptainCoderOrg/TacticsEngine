@using CaptainCoder.TacticsEngine.Board
<div class="board-container" 
    style="--cell-size: @(CellSize)px;
           --board-width: @Width;
           --board-height: @Height;">
    @foreach (Position position in Positions)
    {
        <TileRenderer @key="@position" Position="@position" Board="@Board"/>
    }
</div>

@code
{
    public int CellSize { get; set; } = 50;
    public int Width { get; set; } = 10;
    public int Height { get; set; } = 10;
    public Board Board { get; private set; } = new();
    public IEnumerable<Position> Positions
    {
        get
        {
            for (int y = 0; y < Height; y++)
            {
                for (int x = 0; x < Width; x++)
                {
                    yield return new Position(x, y);
                }
            }
        }
    }

    public async Task LoadBoard(Board board)
    {
        Board = board;
        StateHasChanged();
        await Task.CompletedTask;
    }

    protected override void OnInitialized()
    {
        BoundingBox box = new (new Position(2, 2), 3, 3);
        Board.CreateEmptyTiles(box.Positions());
        Board.CreateEmptyTile(1, 1);
    }

    public void AddFigure(int x, int y, Figure toAdd)
    {
        Board.AddFigure(x, y, toAdd);
        StateHasChanged();
    }
}